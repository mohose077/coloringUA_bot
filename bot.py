import logging
import asyncio
from flask import Flask, request
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    Application, CommandHandler, CallbackQueryHandler, ContextTypes
)
from config import TELEGRAM_BOT_TOKEN, RENDER_EXTERNAL_URL
from generator import generate_coloring_image
from storage import log_user_choice, log_user_feedback

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("bot")

flask_app = Flask(__name__)
telegram_app = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

user_sessions = {}  # –∑–±–µ—Ä—ñ–≥–∞—î —Ç–∏–º—á–∞—Å–æ–≤—ñ –≤–∏–±–æ—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∏ –¥–ª—è –≤–∞—à–æ—ó –¥–∏—Ç–∏–Ω–∏ üé®\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –ø–æ—á–∞—Ç–∏.",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ü–æ—á–∞—Ç–∏", callback_data="start_flow")]
        ])
    )

# Callback –æ–±—Ä–æ–±–Ω–∏–∫ –≤–∏–±–æ—Ä—É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
# (... —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫—Ä–æ–∫—ñ–≤: –≤—ñ–∫ ‚Üí —Ç–µ–º–∞—Ç–∏–∫–∞ ‚Üí –∫—ñ–ª—å–∫—ñ—Å—Ç—å ‚Üí —Ñ–æ—Ä–º–∞—Ç ‚Üí –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è ...)

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
# (... generate_coloring_image, –æ—Ü—ñ–Ω–∫–∏, –ª–æ–≥—É–≤–∞–Ω–Ω—è ...)

# Flask endpoint –¥–ª—è webhook
@flask_app.post("/")
def webhook():
    update = Update.de_json(request.get_json(force=True), telegram_app.bot)
    telegram_app.update_queue.put_nowait(update)
    return "OK"

telegram_app.add_handler(CommandHandler("start", start))
# (... —ñ–Ω—à—ñ CallbackQueryHandler –¥–ª—è –∫—Ä–æ–∫—ñ–≤ –≤–∏–±–æ—Ä—É ...)

async def run():
    await telegram_app.initialize()
    await telegram_app.start()
    await telegram_app.updater.start_polling()

if __name__ == "__main__":
    asyncio.run(run())
